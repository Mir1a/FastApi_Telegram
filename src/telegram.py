import requests
import telebot
import webbrowser
from config import BOT

from telebot import types


def send_message(bottoken: str, chatid: str, message: str) -> str:
    url = f"https://api.telegram.org/bot{bottoken}/sendMessage"
    payload = {"chat_id": chatid, "text": message}
    response = requests.post(url, data=payload)
    return response.text


bot = telebot.TeleBot(BOT)

user_initialized = {}


@bot.message_handler(content_types=['text', 'photo'])
def start(message):
    user_id = message.from_user.id
    if user_id not in user_initialized:
        user_initialized[user_id] = True
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton("—Å—Å—ã–ª–∫–∏üîó")
        btn2 = types.KeyboardButton("/startüëã")
        btn3 = types.KeyboardButton("—Ñ–æ—Ç–∫–∞üì∑")
        btn4 = types.KeyboardButton('üÜî')
        btn5 = types.KeyboardButton("/helpüÜò")
        btn6 = types.KeyboardButton("/info‚ÑπÔ∏è")
        markup.row(btn1, btn2)
        markup.row(btn3, btn4)
        markup.row(btn5, btn6)
        bot.send_message(message.chat.id, "Hi", reply_markup=markup)
    else:
        info(message)


def info(message):
    if message.content_type == 'photo':
        bot.send_message(message.chat.id, "—ç—Ç–æ —Ñ–æ—Ç–æ")
    elif message.content_type == 'text':
        text = message.text.lower()
        if "–ø—Ä–∏–≤–µ—Ç" in text:
            bot.send_message(message.chat.id, "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç")
        elif "–ü—Ä–µ–¥—Å–∫–∞–∂–∏ –±—É–¥—É—â–µ–µ" in text:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –≤—Å—ë –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–æ")
        elif text == "üÜî":
            bot.reply_to(message, f'id: {message.from_user.id}')
        elif text == "/helpüÜò":
            bot.send_message(message.chat.id, "–¢—ã —Å–µ–π—á–∞—Å –æ–±—â–∞–µ—à—å—Å—è –±–æ—Ç–æ–º, —Å–æ–∑–¥–∞–Ω–Ω—ã–º Miria –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—É—á–µ–Ω–∏—è "
                                              "–±–∏–±–ª–∏–æ—Ç–µ–∫–µ telebot")
        elif text == "/info‚ÑπÔ∏è":
            bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –Ω–∏–∂–µ –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω–∞ –≤—Å—è '
                                              f'–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –µ–º—É —Ö–æ—Ç—è '
                                              f'–±—ã –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}')
        elif text == "/startüëã":
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç")
        elif text == "/site":
            bot.send_message(message.chat.id, "https://github.com/Mir1a")
        elif text == "—Ñ–æ—Ç–∫–∞üì∑":
            file = open('./sondjinvoo_potok.png', 'rb')
            bot.send_photo(message.chat.id, file)
        elif "—Å—Å—ã–ª–∫–∏" in text:
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton("github", url="https://github.com/Mir1a")
            btn2 = types.InlineKeyboardButton("linkidin", url="https://www.linkedin.com/in/matvey-bliznyuk-a735ab303/")
            btn3 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='delete')
            btn4 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data='edit')
            markup.row(btn1, btn2)
            markup.row(btn3, btn4)
            bot.reply_to(message, "–¢–≤–æ–∏ —Å—Å—ã–ª–∫–∏", reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == "delete":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
    elif callback.data == 'edit':
        bot.edit_message_text('edit text', callback.message.chat.id, callback.message.message_id)


def start_bot():
    bot.polling(non_stop=True)
